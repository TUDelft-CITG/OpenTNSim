version: 2
jobs:
  build:
    machine:
      image: ubuntu-2204:edge
    steps:
      - checkout
      - run:
          name: Build and start container
          command: docker-compose up -d

      - run:
          name: Install coverage badge beforte running tests
          command: |
            docker exec -it opentnsim bash -c "pip install coverage coverage-badge "

      - run:
          name: Run tests - Pytest
          command: |
            docker exec -it opentnsim bash -c "pytest"
            docker cp opentnsim:/OpenTNSim/htmlcov /tmp/artifacts

      - run:
          name: Build docs
          command: |
            docker exec -it opentnsim bash -c "pip install sphinx"
            docker exec -it opentnsim bash -c "sphinx-build -b html docs docs/_build/html"
            docker cp opentnsim:/OpenTNSim/docs/_build/html /tmp/artifacts/docs

      - run:
          name: Generate coverage badge
          command: |
            docker exec -it opentnsim bash -c "coverage-badge -o coverage.svg"
            docker cp opentnsim:/OpenTNSim/coverage.svg /tmp/artifacts/

      - store_artifacts:
          path: /tmp/artifacts


  test-notebooks:
    machine:
      image: ubuntu-2204:edge
    steps:
      - checkout
      - run:
          name: Build and start container
          command: docker-compose up -d

      - run:
          name: Test notebooks
          command: |
            docker exec -it opentnsim bash -c "pytest --nbmake ./notebooks/Example*.ipynb --nbmake-kernel=python3 --ignore ./notebooks/.ipynb_checkpoints --ignore ./notebooks/cleanup --ignore ./notebooks/students"
      
      - store_artifacts:
          path: /tmp/artifacts

  build:
    machine:
      image: ubuntu-2204:edge
    steps:
      - checkout
      - run:
          name: Build and start container
          command: docker-compose up -d

      

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test-notebooks:
          filters:
            tags:
              only: /.*/
